{"version":3,"sources":["components/pages/SinglePage.js"],"names":["require","useState","useEffect","useParams","SinglePage","Component","dataType","id","data","setData","useMarvelService","loading","error","getComic","getCharacter","clearError","updateData","then","onDataLoaded","errorMessage","spinner","content"],"mappings":"6JAIA,EAAgCA,EAAQ,GAAhCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UACVC,EAAcH,EAAQ,GAAtBG,UA4COC,UAxCI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,EAAOJ,IAAPI,GACR,EAAwBN,EAAS,MAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA+DC,cAAvDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,aAAcC,EAAhD,EAAgDA,WAEhDb,GAAU,WACNc,MACD,CAACT,IAEJ,IAAMS,EAAa,WAGf,OAFAD,IAEQT,GACJ,IAAK,QACDO,EAASN,GAAIU,KAAKC,GAClB,MACJ,IAAK,YACDJ,EAAaP,GAAIU,KAAKC,KAK5BA,EAAe,SAACV,GAClBC,EAAQD,IAGNW,EAAeP,EAAQ,cAAC,IAAD,IAAmB,KAC1CQ,EAAUT,EAAU,cAAC,IAAD,IAAc,KAClCU,EAAYV,GAAWC,IAAUJ,EAAoC,KAA5B,cAACH,EAAD,CAAWG,KAAMA,IAEhE,OACI,qCACI,cAAC,IAAD,IACCW,EACAC,EACAC","file":"static/js/8.1f19dd14.chunk.js","sourcesContent":["import useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport AppBaner from '../appBanner/AppBanner';\r\nconst { useState, useEffect } = require(\"react\");\r\nconst { useParams } = require(\"react-router-dom\");\r\n\r\n\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n    const { id } = useParams();\r\n    const [data, setData] = useState(null);\r\n    const { loading, error, getComic, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n    }, [id]);\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                getComic(id).then(onDataLoaded);\r\n                break;\r\n            case 'character':\r\n                getCharacter(id).then(onDataLoaded);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !data) ? <Component data={data} /> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBaner />\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage;"],"sourceRoot":""}