{"version":3,"sources":["resources/img/mjolnir.png","services/MarvelService.js","hooks/http.hook.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComic","getComic","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","View","newDesc","objFit","length","slice","objectFit","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharlist","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newcharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","comicsFilter","link","resourceURI","ind","split","reverse","join","to","splice","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","newComicLoading","setNewComicLoading","comicEnded","setComicEnded","onComicListLoaded","newComicsList","renderComics","AppBanner","avengers","avengersLogo","ComicsPage","Page404","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","AppHeader","exact","activeStyle","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1f308d6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=5fd3f03653c1245ba41bca1d67655276';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        // console.log(res);\r\n        return res.data.results.map(_transformComic)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description || 'There is no description',\r\n            pageCount: comic.pageCount ? `${comic.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            language: comic.textObjects.language || 'en-us',\r\n            price: comic.prices.price ? `${comic.prices.price}$` : 'not avaible'\r\n        }\r\n    }\r\n\r\n    return { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic }\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'aplication/json' }) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, { method, body, headers });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n    return { loading, request, error, clearError }\r\n}","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nimport './ErrorMessage.css';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} alt=\"error\" style={{ 'display': 'block', 'width': '250px', 'height': '250px', 'object-fit': 'contain', 'margin': '0 auto' }} />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState({});\r\n\r\n    const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        // const timerId = setInterval(updateChar, 6000);\r\n        // return () => {\r\n        //     clearInterval(timerId);\r\n        // }\r\n    }, []) // eslint-disable-line\r\n    // componentDidMount() {\r\n    //     this.updateChar();\r\n    //     // this.timerId = setInterval(this.updateChar, 3000);\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     // clearInterval(this.timerId);\r\n    // }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        getCharacter(id)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error) ? <View char={char} /> : null\r\n\r\n    return (\r\n        <div className=\"randomchar\" >\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br />\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\" onClick={updateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki } = char;\r\n    let newDesc,\r\n        objFit;\r\n    if (description) {\r\n        if (description.length > 214) {\r\n            newDesc = description.slice(0, 214) + '...';\r\n        } else {\r\n            newDesc = description;\r\n        }\r\n    } else {\r\n        newDesc = 'There is no data about this character';\r\n    }\r\n\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        objFit = { objectFit: 'contain' };\r\n    } else {\r\n        objFit = null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={objFit} />\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {newDesc}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import './charList.scss';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharlist] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, []); // eslint-disable-line\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    const onCharListLoaded = (newcharList) => {\r\n        let ended = false;\r\n        if (newcharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharlist(charList => [...charList, ...newcharList]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended);\r\n    }\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    // focus = () => {\r\n    //     if (this.myRef) {\r\n    //         this.myRef.focus();\r\n    //         console.log(this.myRef);\r\n    //     }\r\n    // }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let objFit = { objectFit: 'cover' }\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                objFit = { objectFit: 'unset' }\r\n            }\r\n            return (\r\n                <li\r\n                    ref={el => itemRefs.current[i] = el}\r\n                    className={'char__item'}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id);\r\n                        focusOnItem(i);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i);\r\n                        }\r\n                    }}\r\n                >\r\n                    <img src={item.thumbnail} alt={item.name} style={objFit} />\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(charList);\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{ 'display': charEnded ? 'none' : 'block' }}\r\n                onClick={() => onRequest(offset)}\r\n            >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import './charInfo.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const { charId } = props;\r\n    const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    }, [charId]) // eslint-disable-line\r\n\r\n    const updateChar = () => {\r\n        if (!charId) {\r\n            return;\r\n        }\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton />\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !char) ? <View char={char} /> : null\r\n\r\n\r\n    return (\r\n        <div className=\"char__info\" >\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n    let comicsFilter,\r\n        objFit;\r\n\r\n    if (comics.length !== 0) {\r\n        comicsFilter = comics.map((item, i) => {\r\n            const link = item.resourceURI;\r\n            let id = '';\r\n            let ind = link.length - 1;\r\n            while (link[ind] != '/') {\r\n                id += link[ind];\r\n                --ind;\r\n            }\r\n\r\n            id = id.split('').reverse().join('');\r\n            if (i < 10) {\r\n                return (\r\n                    <li key={i} className=\"char__comics-item\">\r\n                        <Link to={`/MarvelApp/comics/${id}`}>{item.name}</Link>\r\n                    </li>\r\n                )\r\n            }\r\n            return null;\r\n        })\r\n        comicsFilter.splice(10);\r\n    } else {\r\n        comicsFilter = 'No data on comics';\r\n    }\r\n\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        objFit = { objectFit: 'contain' };\r\n    } else {\r\n        objFit = null;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={objFit} />\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description ? description : 'There is no data about this character'}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comicsFilter}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport { useState } from \"react\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} />\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import './comicsList.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newComicLoading, setNewComicLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [comicEnded, setComicEnded] = useState(false);\r\n\r\n    const { loading, error, getAllComics } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, []); // eslint-disable-line\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewComicLoading(false) : setNewComicLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicListLoaded)\r\n    }\r\n\r\n    const onComicListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n        setNewComicLoading(newComicLoading => false);\r\n        setOffset(offset => offset + 8);\r\n        setComicEnded(comicEnded => ended);\r\n    }\r\n\r\n    function renderComics(arr) {\r\n        const items = arr.map((item) => {\r\n            let objFit = { objectFit: 'cover' }\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                objFit = { objectFit: 'unset' }// eslint-disable-line\r\n            }\r\n            return (\r\n                <li\r\n                    className={'comics__item'}\r\n                    key={item.id}\r\n                >\r\n                    <Link to={`/MarvelApp/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderComics(comicsList);\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading && !newComicLoading ? <Spinner /> : null;\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newComicLoading}\r\n                style={{ 'display': comicEnded ? 'none' : 'block' }}\r\n                onClick={() => onRequest(offset)}\r\n            >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/ErrorMessage.js\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <ErrorMessage />\r\n            <p style={{ 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px' }}>Page doesn't exist</p>\r\n            <Link style={{ 'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px' }} to=\"/MarvelApp\">Back to main page</Link>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const { comicId } = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId]) // eslint-disable-line\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic} /> : null\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({ comic }) => {\r\n    const { title, description, pageCount, thumbnail, language, price } = comic;\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/MarvelApp/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleComicPage;","import { Link, NavLink } from 'react-router-dom';\r\nimport './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to=\"/MarvelApp\">\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink exact activeStyle={{ 'color': '#9f0013' }} to=\"/MarvelApp\">Characters</NavLink></li>\r\n                    /\r\n                    <li><NavLink activeStyle={{ 'color': '#9f0013' }} to=\"/MarvelApp/comics\">Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { MainPage, ComicsPage, Page404, SingleComicPage } from '../pages';\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader />\r\n                <main>\r\n                    <Switch>\r\n                        <Route exact path=\"/MarvelApp\">\r\n                            <MainPage />\r\n                        </Route>\r\n                        <Route exact path=\"/MarvelApp/comics\">\r\n                            <ComicsPage />\r\n                        </Route>\r\n                        <Route exact path=\"/MarvelApp/comics/:comicId\">\r\n                            <SingleComicPage />\r\n                        </Route>\r\n                        <Route path=\"*\">\r\n                            <Page404 />\r\n                        </Route>\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM\r\n    .createRoot(document.getElementById('root'))\r\n    .render(\r\n        // <React.StrictMode>\r\n            <App />\r\n        // </React.StrictMode>\r\n    );\r\n\r\n"],"sourceRoot":""}